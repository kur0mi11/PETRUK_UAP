#include<iostream>
#include <vector>
#include <algorithm>
#include <cstring>
#include <cmath>
#include <stack>
using namespace std;

struct Perangkat {
    string nama;
    int watt;
    int manfaat;
    double jam_pakai; 
};

struct HasilKnapsack {
    int totalManfaat;
    vector<Perangkat> perangkatTerpilih;
};

void judul() {
cout << endl << endl;
cout << "        $$$$$$\\ $$\\      $$\\ $$$$$$\\ $$$$$$$\\$$$$$$$$\\       $$\\   $$\\ $$$$$$\\ $$\\      $$\\$$$$$$$$\\       $$$$$$$$\\$$\\   $$\\$$$$$$$$\\$$$$$$$\\  $$$$$$\\$$\\     $$\\ " << endl;
cout << "       $$  __$$\\$$$\\    $$$ $$  __$$\\$$  __$$\\__$$  __|      $$ |  $$ $$  __$$\\$$$\\    $$$ $$  _____|      $$  _____$$$\\  $$ $$  _____$$  __$$\\$$  __$$\\$$\\   $$  |" << endl;
cout << "       $$ /  \\__$$$$\\  $$$$ $$ /  $$ $$ |  $$ | $$ |         $$ |  $$ $$ /  $$ $$$$\\  $$$$ $$ |            $$ |     $$$$\\ $$ $$ |     $$ |  $$ $$ /  \\__\\$$\\ $$  / " << endl;
cout << "       \\$$$$$$\\ $$\\$$\\$$ $$ $$$$$$$$ $$$$$$$  | $$ |         $$$$$$$$ $$ |  $$ $$\\$$\\$$ $$ $$$$$\\          $$$$$\\   $$ $$\\$$ $$$$$\\   $$$$$$$  $$ |$$$$\\ \\$$$$  /  " << endl;
cout << "        \\____$$\\$$ \\$$$  $$ $$  __$$ $$  __$$<  $$ |         $$  __$$ $$ |  $$ $$ \\$$$  $$ $$  __|         $$  __|  $$ \\$$$$ $$  __|  $$  __$$<$$ |\\_$$ | \\$$  /   " << endl;
cout << "       $$\\   $$ $$ |\\$  /$$ $$ |  $$ $$ |  $$ | $$ |         $$ |  $$ $$ |  $$ $$ |\\$  /$$ $$ |            $$ |     $$ |\\$$$ $$ |     $$ |  $$ $$ |  $$ |  $$ |    " << endl;
cout << "       \\$$$$$$  $$ | \\_/ $$ $$ |  $$ $$ |  $$ | $$ |         $$ |  $$ |$$$$$$  $$ | \\_/ $$ $$$$$$$$\\       $$$$$$$$\\$$ | \\$$ $$$$$$$$\\$$ |  $$ \\$$$$$$  |  $$ |    " << endl;
cout << "        \\______/\\__|     \\__\\__|  \\__\\__|  \\__| \\__|         \\__|  \\__|\\______/\\__|     \\__\\________|      \\________\\__|  \\__\\________\\__|  \\__|\\______/   \\__|    " << endl;
cout << endl<< endl;
}

const int JUMLAH_PERANGKAT = 12;
Perangkat perangkatArray[JUMLAH_PERANGKAT] = {
    {"AC", 1000, 8},
    {"Blender", 200, 5},
    {"Dispenser", 400, 6},
    {"Kipas Angin", 80, 4},
    {"Kompor Listrik", 900, 7},
    {"Kulkas", 150, 9},
    {"Lampu", 15, 3},
    {"Mesin Cuci", 500, 6},
    {"Microwave", 1200, 6},
    {"Rice Cooker", 300, 7},
    {"Setrika", 400, 4},
    {"Televisi", 250, 7}
};

return 0;
}

void tampilkanPerangkatPointer(const Perangkat* p) {
    if (p != nullptr) {
        cout << "- " << p->nama << " (" << p->watt << "W, manfaat: " << p->manfaat << ")\n";
    }
}

void tampilkanPerangkat() {
    cout << "\n============================================================\n";
    cout << " DAFTAR PERANGKAT ELEKTRONIK\n";
    cout << "============================================================\n";
    for (int i = 0; i < JUMLAH_PERANGKAT; i++) {
        tampilkanPerangkatPointer(&perangkatArray[i]);
    }
}

void tampilkanJamMenit(double jam) {
    int jam_utuh = (int)jam;
    int menit = (int)round((jam - jam_utuh) * 60);
    cout << jam_utuh << " jam " << menit << " menit";
}

HasilKnapsack knapsack(vector<Perangkat>& perangkat, int batasDaya) {
    int n = perangkat.size();
    vector<vector<int>> dp(n + 1, vector<int>(batasDaya + 1, 0));

    for (int i = 1; i <= n; i++) {
        for (int w = 0; w <= batasDaya; w++) {
            if (perangkat[i - 1].watt <= w) {
                dp[i][w] = max(dp[i - 1][w],
                               dp[i - 1][w - perangkat[i - 1].watt] + perangkat[i - 1].manfaat);
            } else {
                dp[i][w] = dp[i - 1][w];
            }
        }
    }

    stack<Perangkat> stackPerangkat;
    int w = batasDaya;
    for (int i = n; i > 0; i--) {
        if (dp[i][w] != dp[i - 1][w]) {
            stackPerangkat.push(perangkat[i - 1]);
            w -= perangkat[i - 1].watt;
        }
    }

    vector<Perangkat> terpilih;
    while (!stackPerangkat.empty()) {
        terpilih.push_back(stackPerangkat.top());
        stackPerangkat.pop();
    }

    return HasilKnapsack{dp[n][batasDaya], terpilih};
}
